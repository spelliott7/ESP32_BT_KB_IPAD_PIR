#include <WiFi.h>
#include <PubSubClient.h>
#include <BleKeyboard.h>




//User selected properties 
const PROGMEM char* WIFI_SSID = "WiFi SSID";
const PROGMEM char* WIFI_PASSWORD = "WiFi Pass";

// MQTT: ID, server IP, port, username and password
const PROGMEM char* MQTT_CLIENT_ID = "ipad_kb";
const PROGMEM char* MQTT_SERVER_IP = "MQTT IP/Server info";
const PROGMEM uint16_t MQTT_SERVER_PORT = 1883;
const PROGMEM char* MQTT_USER = "MQTT User";
const PROGMEM char* MQTT_PASSWORD = "MQTT Pass";
const PROGMEM char* PIN_CODE = "0000"; //iPad pin code
const PROGMEM char* MQTT_TOPIC = "ipad/kb"; // MQTT topic
#define timeSeconds 300 //set to number of seconds between activating BT keyboard commands

unsigned long now = millis();
unsigned long lastTrigger = 0;
boolean startTimer = false;

WiFiClient wifiClient;
BleKeyboard bleKeyboard;
PubSubClient client(wifiClient);
long lastMsg = 0;
char msg[50];
int value = 0;

  

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.println("INFO: Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect(MQTT_CLIENT_ID, MQTT_USER, MQTT_PASSWORD)) {
      Serial.println("INFO: connected");
      client.subscribe(MQTT_TOPIC);
    } else {
      Serial.print("ERROR: failed, rc=");
      Serial.print(client.state());
      Serial.println("DEBUG: try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  // init the serial
  Serial.begin(115200);

  // init the WiFi connection
  Serial.println();
  Serial.println();
  Serial.print("INFO: Connecting to ");
  Serial.println(WIFI_SSID);
  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("INFO: WiFi connected");
  Serial.println("INFO: IP address: ");
  Serial.println(WiFi.localIP());

  // init the MQTT connection
  client.setServer(MQTT_SERVER_IP, MQTT_SERVER_PORT);
  client.setCallback(callback);

  Serial.println("Ready to send PIN via BT");
  bleKeyboard.begin();
  
}

void callback(char* p_topic, byte* p_payload, unsigned int p_length) {
  Serial.print("Message arrived on topic: ");
  Serial.print(p_topic);
  Serial.print(". Message: ");
  String messageCmd;
  
  for (int i = 0; i < p_length; i++) {
    Serial.print((char)p_payload[i]);
    messageCmd += (char)p_payload[i];
  }
  Serial.println();

  if (String(p_topic) == "MQTT_TOPIC") {
    if (messageCmd == "on") {
      // on message arrives then do the thing
      Serial.println("Sending wake command...");
      bleKeyboard.write(32);
      delay(100);
      bleKeyboard.write(32);
      delay(3500);
      bleKeyboard.print(PIN_CODE); 
      bleKeyboard.releaseAll();
      delay (timeSeconds*1000);
    }
  } else {
    if (messageCmd == "off") {
      Serial.println("off");
    // can add bleKeyboard.write commands to lock ipad here
      }
    }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  now = millis();
  
  }
